name: CI

on: [push]

jobs:
  build-and-test-package:
    strategy:
      fail-fast: true 
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        include:
          - os: ubuntu-latest
            environment-file: environment.ubuntu.yml
          - os: macos-latest
            environment-file: environment.osx.yml
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Run formatter
      uses: psf/black@stable
      if: matrix.os == 'ubuntu-latest'
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Run linter
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Install dependencies on ${{ matrix.os }}
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: kipoi-veff2
        environment-file: ${{ matrix.environment-file }}
        python-version: 3.7
        auto-activate-base: false
    - name: Install kipoi-veff2
      shell: bash -l {0}
      run: python -m pip install .
    - name: Run CI tests on ${{ matrix.os }}
      shell: bash -l {0}
      run: pytest -k "not workflow" -s --disable-warnings tests
    - name: Run the full workflow on ${{ matrix.os }}
      shell: bash -l {0}
      run: cd examples && snakemake -j4 && cd ../ && pytest -k "workflow" -s --disable-warnings tests


  build-and-test-package-with-minimal-env:
    runs-on: ubuntu-latest
    container:
      image: "centos:7"
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install system level dependencies and conda
      run: |
        yum update -y
        yum install -y sudo
        yum install -y build-essential libz-dev libcurl3-dev libarchive-dev gcc wget
        wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
        /usr/bin/bash ~/miniconda.sh -b
        rm ~/miniconda.sh
        ~/miniconda3/bin/conda clean -tipsy
        sudo ln -s ~/miniconda3/etc/profile.d/conda.sh /etc/profile.d/conda.sh
        echo ". ~/miniconda3/etc/profile.d/conda.sh" >> ~/.bashrc
        echo "conda activate base" >> ~/.bashrc
    - name: Install kipoi-veff2
      shell: bash -l {0}
      run: |
        source ~/.bashrc 
        conda update -n base conda
        conda install -n base conda-libmamba-solver
        conda env create -f environment.minimal.linux.yml --experimental-solver=libmamba
        conda activate kipoi-veff2
        python -m pip install .
    - name: Run CI tests on centos and send coverage report to coveralls.io
      shell: bash -l {0}
      run: |
        source activate kipoi-veff2
        pip install coveralls
        coverage run -m pytest -k "not workflow" -s --disable-warnings tests
        coveralls --service=github

  testdocker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Pull docker image
      run: |
        docker pull kipoi/kipoi-veff2:py36
    - name: Test docker image
      run: |
        docker run -v $PWD:/tmp kipoi/kipoi-veff2:py36 pytest -s --disable-warnings -k "not workflow" /tmp/tests 
        docker system prune -af